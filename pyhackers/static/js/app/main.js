// Generated by CoffeeScript 1.6.3
(function() {
  var Application,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    _this = this;

  this.Beacon = (function() {
    function Beacon() {
      this.notify = __bind(this.notify, this);
      this.view = __bind(this.view, this);
      this.url = "http://pythonhackers.com/gitbeacon?";
    }

    Beacon.prototype.view = function() {
      var p;
      p = {
        t: "v"
      };
      return this.notify(this.getQs(p));
    };

    Beacon.prototype.notify = function(params) {
      var reqUrl;
      if (PythonHackers.opts.prod === 0) {
        return;
      }
      reqUrl = this.url + params;
      if (PythonHackers.opts.prod === 0) {
        return this.addImage(reqUrl);
      } else {
        return $.get(reqUrl);
      }
    };

    Beacon.prototype.getQs = function(dict) {
      var key, params, val;
      params = [];
      _.extend(dict, {
        env: PythonHackers.opts.prod,
        start: PythonHackers.opts.startTime,
        ts: this._ts(),
        r: document.referrer,
        cp: document.location.href,
        ua: navigator.userAgent,
        scr: screen.width + 'x' + screen.height
      });
      for (key in dict) {
        val = encodeURIComponent(dict[key]);
        params.push("" + key + "=" + val);
      }
      return params.join('&');
    };

    Beacon.prototype._ts = function() {
      return (new Date()).getTime();
    };

    Beacon.prototype.addImage = function(src) {
      var i;
      if (PythonHackers.opts.prod === 0) {
        return;
      }
      i = document.createElement("img");
      i.setAttribute('src', src);
      i.setAttribute('alt', 'a');
      i.setAttribute('height', '1px');
      i.setAttribute('width', '1px');
      return document.body.appendChild(i);
    };

    Beacon.prototype.click = function(path, htag) {
      var qs, url;
      qs = this.getQs({
        t: "c",
        p: path
      });
      url = this.url + qs;
      if (htag || PythonHackers.opts.prod === 0) {
        this.notify(qs);
        return;
      }
      return this.addImage(url);
    };

    return Beacon;

  })();

  Application = {
    begin: function() {
      this.dog = new Beacon();
      return $(this.load);
    },
    mixevents: function() {
      var _this = this;
      return _.defer(function() {
        return _this.dog.view();
      });
    },
    load: function() {
      Application.formSubmitter();
      return Application.mixevents();
    },
    captureSubmit: function($el) {
      var action, id, slug;
      if (PythonHackers.opts.prod === 0) {
        return;
      }
      action = $el.attr("action");
      if (!(action == null)) {
        action = action.replace("/ajax/", "");
      }
      id = $('[name="id"]', $el).val();
      slug = $('[name="slug"]', $el).val();
      return mixpanel.track(action, {
        referrer: document.referrer,
        id: id,
        slug: slug
      });
    },
    formSubmitter: function() {
      $('form[data-remote]').submit(function(evt) {
        var $this, action, postData;
        evt.preventDefault();
        evt.stopPropagation();
        Application.captureSubmit($(evt.currentTarget));
        if (!PythonHackers.session.hasOwnProperty("id")) {
          document.location = '/authenticate';
          return;
        }
        $this = $(this);
        action = $this.attr("action");
        postData = $this.serializeArray();
        return $.post(action, postData);
      });
      return $('[data-toggle="tooltip"]').tooltip();
    }
  };

  Application.begin();

}).call(this);
