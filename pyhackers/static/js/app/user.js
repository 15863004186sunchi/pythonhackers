// Generated by CoffeeScript 1.7.1
(function() {
  var User,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  User = (function() {
    User.prototype.postTemplate = window.Handlebars.compile($.trim($("#message-template").html()));

    User.prototype.projectTemplate = window.Handlebars.compile($.trim($("#project-template").html()));

    User.prototype.discussionTemplate = window.Handlebars.compile($.trim($("#discussion-template").html()));

    function User(user_nick, activeModule) {
      this.user_nick = user_nick;
      this.activeModule = activeModule;
      this.hideShowTrick = __bind(this.hideShowTrick, this);
      console.log("Initialized");
    }

    User.prototype.init = function() {
      $('a[data-toggle="tab"]').on('shown.bs.tab', (function(_this) {
        return function(e) {
          var targetTab;
          targetTab = $(e.target).attr("href");
          return _this.loadModule(targetTab, e);
        };
      })(this));
      console.log("Initialized");
      return this.loadModule(this.activeModule);
    };

    User.prototype.loadModule = function(target, evt) {
      var $tab;
      $tab = $('#user-tab');
      switch (target) {
        case "#projects":
        case "projects":
          if (evt == null) {
            $('#projects').addClass("active").siblings().removeClass("active");
            $tab.find('a[href="#projects"]').parent().addClass("active").siblings().removeClass("active");
          }
          return this.loadProjects();
        case "#timeline-container":
        case "timeline":
          return this.loadTimeline();
        case "#discussions-container":
        case "discussions":
          if (evt == null) {
            $('#discussions-container').addClass("active").siblings().removeClass("active");
            $tab.find('a[href="#discussions-container"]').parent().addClass("active").siblings().removeClass("active");
          }
          return this.loadDiscussions();
        default:
          return console.log("" + target + " not found");
      }
    };

    User.prototype.loadProjects = function() {
      var $projects;
      $projects = $("#projects");
      return $.getJSON("/ajax/user/" + this.user_nick + "/projects", {
        _: new Date().getTime()
      }, (function(_this) {
        return function(data) {
          return $projects.html(_this.projectTemplate({
            projects: data.projects
          }));
        };
      })(this));
    };

    User.prototype.loadTimeline = function() {
      var $timeline;
      $timeline = $("#timeline");
      return $.getJSON("/ajax/user/" + this.user_nick + "/timeline", {
        _: new Date().getTime(),
        after_id: this.lastMessage || -1
      }, (function(_this) {
        return function(data) {
          var current_user_id;
          current_user_id = PythonHackers.session ? PythonHackers.session.id : -1;
          _.each(data.timeline, function(p) {
            p.can_delete = p.user.id === current_user_id;
            return p.display_context = p.discussion_id === !null || p.discussion_id !== "" ? true : false;
          });
          $timeline.html(_this.postTemplate({
            message: data.timeline
          }));
          return _this.hideShowTrick();
        };
      })(this));
    };

    User.prototype.hideShowTrick = function() {
      return $("[data-message-id]").on("mouseenter", function() {
        return $(this).find(".panel-footer").removeClass("hidden");
      }).on("mouseleave", function() {
        return $(this).find(".panel-footer").addClass("hidden");
      });
    };

    User.prototype.loadDiscussions = function() {
      var $discussions;
      $discussions = $("#discussions");
      return $.getJSON("/ajax/user/" + this.user_nick + "/discussions", {
        _: new Date().getTime(),
        after_id: this.lastMessage || -1
      }, (function(_this) {
        return function(data) {
          console.log(data);
          _.each(data.discussions, function(dd) {
            return dd.user = data.user;
          });
          return $discussions.html(_this.discussionTemplate({
            discussions: data.discussions
          }));
        };
      })(this));
    };

    return User;

  })();

  $(function() {
    var activeModule, user, user_nick;
    user_nick = $("#user_nick").val();
    activeModule = $("#active_module").val();
    user = new User(user_nick, activeModule);
    return user.init();
  });

}).call(this);
